NAME: Prithvi Kannan
EMAIL: prithvi.kannan@gmail.com
ID: 405110096

Project 2B
Lock Granularity and Performance

In this project, I did additional performance instrumentation to confirm bottlenecks with locks, and extended my previous solution to deal with this problem. 
Part 1 is the performance instrumentation and measurement to confirm the cause of the problem. Part 2 is implement a new option to divide a list into sublists and 
support synchronization on sublists, thus allowing parallel access to the (original) list. Part 3 is new performance measurements to confirm that the problem has been solved.

I cited the following references provided in the spec:
    https://computing.llnl.gov/tutorials/pthreads/
    http://web.cs.ucla.edu/~harryxu/courses/111/winter20/ProjectGuide/lab2_list.gp
    http://web.cs.ucla.edu/~harryxu/courses/111/winter20/ProjectGuide/SortedList.h

Files Included:
    SortedList.h - a header file (given by instructor) describing the interfaces for linked list operations
    SortedList.c - a C module that implements insert, delete, lookup, and length methods for a sorted doubly linked list with yield calls
    lab2_list.c - a C program that implements and produces the specified output statistics
    lab2_list.csv - containing all results for all of the tests
    lab2b_1.png - throughput vs. number of threads for mutex and spin-lock synchronized list operations
    lab2b_2.png - mean time per mutex wait and mean time per operation for mutex-synchronized list operations
    lab2b_3.png - successful iterations vs. threads for each synchronization method
    lab2b_4.png - throughput vs. number of threads for mutex synchronized partitioned lists
    lab2b_5.png - throughput vs. number of threads for spin-lock-synchronized partitioned lists
    Makefile - containing targets to build, run 200+ specified test cases, make graphs, create tar and cleanup
    lab2_tests.sh - shell script to run a number of test cases 
    README - description of project
    lab2_list.gp - makes 5 plots using GNU plot
    
Notes:
    Building off my work on the previous project to optimize the test cases in the Makefile using loops, I realized that I could get rid of my errors and use an easier syntax by 
    writing a bash script and having my Makefile run that script for the test target. I've implemented that for this lab. 

2.3.1

2.3.2

2.3.3

2.3.4